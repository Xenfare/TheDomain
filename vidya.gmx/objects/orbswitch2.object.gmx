<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_orb</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="4" ename="sword">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ds_list_find_index(sword2.hitlist, id) = -1 &amp;&amp; other.damaging = true
{
    var radius = CELL_SIZE * 10.5
    var l = x - radius
    var r = x + radius
    var t = y - radius
    var b = y + radius 
    var total = 0
    var total2 = 0
    with(all)
    {
        var xx = x
        var yy = y
        if object_is_ancestor(object_index,wall) or object_index = wall
        {
            xx += 32
            yy += 32
        }
        if point_in_rectangle(xx,yy,l,t,r,b)
        {
            
            if object_is_ancestor(object_index,wall) or object_index = wall
            {
                global.wall_grid[# x/CELL_SIZE,y/CELL_SIZE] = 0
                x += 32
                y += 32
            }
            var dist = point_distance(x,y,other.x,other.y);
            var dir = point_direction(other.x,other.y,x,y) - 90;
            x = other.x + lengthdir_x(dist,dir)
            y = other.y + lengthdir_y(dist,dir)
            if object_is_ancestor(object_index,wall) or object_index = wall
            {
                x -= 32
                y -= 32
                x = round(x / 64) * 64
                y = round(y / 64) * 64
                //show_debug_message(string(x/64) + ',' + string(y/64))
                //global.wall_grid[# x/CELL_SIZE,y/CELL_SIZE] = 1
            }
        }
    }
    with(wall) global.wall_grid[# x/CELL_SIZE,y/CELL_SIZE] = 1
     ds_list_add(sword2.hitlist, id); audio_play_sound(clang, 10, false); other.alarm[0] = 1; other.alarm[2] = 1
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
