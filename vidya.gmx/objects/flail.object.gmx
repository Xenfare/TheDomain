<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_flailhead</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>sword</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>charge = 0
damaging = true
kbvalue = 0
chainx = lengthdir_x(32, 90 + player.image_angle)
chainy = lengthdir_y(32, 90 + player.image_angle)
kbx = player.x
kby = player.y
spd = 0
image_index = 1
image_speed = 0
globalvar sworddir;
globalvar damage;
swing = 0
alarm[0] = 0
hitlist = ds_list_create();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>charge = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if charge &lt;= 0

{

if !mouse_check_button(mb_left)

{
image_angle = direction + 180

if point_distance(x, y, chainx, chainy) &gt; 60 {direction = point_direction(x, y, chainx, chainy); spd = 8}
move_towards_point(chainx, chainy, spd)
if spd &gt; 0 {spd -= 1}
if spd &lt; 0 {spd = 0}
}

else

{
move_towards_point(chainx, chainy, spd)
spd = point_distance(x, y, player.x, player.y) / 4
direction = point_direction(x, y, player.x, player.y)
if point_distance(x, y, player.x, player.y) &lt; 6 {charge = 0}
}

}

else

{
image_angle = swing
x = player.x + lengthdir_x(charge * 2.5, swing);
y = player.y + lengthdir_y(charge * 2.5, swing);
}


{
var i;
for (i = 0; i &lt; ds_list_size(hitlist); i += 2)
   {
   if angle_difference(swing, ds_list_find_value(hitlist, i + 1)) &gt;= 120 {repeat (2) ds_list_delete(hitlist, i); i -= 2}
   }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(player)

{
swing += charge / 2
if swing &gt; 360 {swing -= 360}
if charge &lt;= 0 {image_index = 1; depth = 0; swing = player.image_angle + 90} else
{image_index = 0; depth = -2; damage = 45; spd = 0}
if mouse_check_button(mb_left) {image_index = 0; depth = -2} else {image_index = 1; depth = 1}
if image_index = 1 {if charge &gt; -10 charge-=2} else {if charge &lt; 32 charge++}
if charge &lt; -10 {charge = -10}
if charge &gt; 32 {charge = 32}
if charge &gt;= 18 {damaging = true} else {damaging = false}
kbvalue = (charge / 2) - 11
kbx = player.x
kby = player.y
//if charge &gt;= 25 {with instance_create(x, y, spritefade) {image_angle = other.image_angle; sprite_index = other.sprite_index; fadevalue = 0.33}}
chainx = player.x + lengthdir_x(33, 275 + player.image_angle)
chainy = player.y + lengthdir_y(33, 275 + player.image_angle)
}

else

instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x = chainx
y = chainy
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var i;
for (i = 0; i &lt; 11; i += 1)
{
//draw_sprite(spr_flailchain, 0, chainx, chainy)
xchaindist = lengthdir_x((point_distance(x, y, chainx, chainy) / 10 * i), point_direction(x,y,chainx,chainy))
ychaindist = lengthdir_y((point_distance(x, y, chainx, chainy) / 10 * i), point_direction(x,y,chainx,chainy))
draw_sprite_ext(spr_flailchain, 0, x + (xchaindist), y + (ychaindist), image_xscale, image_yscale, 0, c_white, image_alpha)
}

draw_sprite_ext(spr_flailhand, 0, player.x, player.y, 1, 1, player.image_angle, c_white, image_alpha)
draw_self()
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
