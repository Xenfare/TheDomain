<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_swallower</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>enemyparent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
with instance_create(x, y, swallowerwep) {owner = other.id}
with instance_create(x, y, swallowerwep) {owner = other.id; dir = -1; image_yscale = -1}
with instance_create(x, y, swallowerjaw) {owner = other.id}
with instance_create(x, y, swallowersword) {owner = other.id}
fric = 2
hp = 2000
prevhp = 2000
maxhp = 2000
image_speed = 0
phase = 1
aggro = false
vibrate = 0
inv = 0
stab = 0
rotspd = 0
rotdir = 1
damaging = false
wepimage = 0
wepdir = 0
atks = 0
screamsize = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="9">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[3] = 140
phase = 3
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="6">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>phase = 4
image_index = 0;
alarm[4] = 100

atks++
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[1] = 100
phase = 1
rotdir *= -1
wepimage = 0
wepdir = 0

atks++
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if distance_to_object(player) &lt; 100 &amp;&amp; angle_difference(image_angle, point_direction(x, y, player.x, player.y)) &lt; 50 &amp;&amp; angle_difference(image_angle, point_direction(x, y, player.x, player.y)) &gt; - 50 {phase = 5} else {phase = 3}

if phase = 3
{
alarm[3] = 140
}

if phase = 5
{
alarm[5] = 30
}

atks++
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>phase = choose(1, 6)

if phase = 1
{
alarm[1] = 100
rotdir *= -1
wepimage = 0
wepdir = 0
}

if phase = 6
{
alarm[6] = 100
}

atks++
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if distance_to_object(player) &lt; 100

{
alarm[3] = 140
phase = 3
}

else

{
phase = 4
image_index = 0;
alarm[4] = 100
}

atks = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if distance_to_object(player) &lt; 50 {phase = 2} else
if distance_to_object(player) &gt; 500 {phase = 2} else
if distance_to_object(player) &gt; 280 &amp;&amp; atks &gt; 7 {phase = 2} else {phase = 4}

if phase = 2
{
image_index = 0;
alarm[2] = 150
}

if phase = 4
{
image_index = 0;
alarm[4] = 100
}

atks++
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>inv = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if hp &lt; 1 {instance_destroy()}

if distance_to_object(player) &lt; 300 &amp;&amp; aggro = false {aggro = true; player.interference = true; with instance_create(320+B, 704+B, tempwall) owner = other; with instance_create (320+B, 768+B, tempwall) owner = other; phase = 1; alarm[1] = 100}

if aggro = true

{

if vibrate &lt; 0 {vibrate = 0}
if prevhp &gt; hp &amp;&amp; inv = false {prevhp -= maxhp / 300}
if prevhp &lt; hp {prevhp = hp}

if phase = 1
{
if alarm[1] &gt; 50 {wepdir += 0.2}
if alarm[1] &lt; 10 {if wepdir &lt; 0 {wepdir += 2}} else
if alarm[1] &lt; 50 &amp;&amp; wepdir &gt; -20 {wepdir -= 5}

if alarm[1] &gt; 50 {vibrate += 0.1} else {vibrate -= 0.3} 
if alarm[1] = 50 {vibrate = 16; image_index = 1; player.kb += (distance_to_object(player) * -1 + 280) / 4; if player.kb &gt; 35 {player.kb = 35; with player script_execute(interrupt)}; player.kbdir = point_direction(x,y,player.x,player.y)}
if alarm[1] = 30 {image_index = 0}
image_angle = point_direction(x, y, player.x, player.y)
}



if phase = 2
{
if alarm[2] &gt; 80 {wepdir += 0.2; image_angle = point_direction(x, y, player.x, player.y)}
if alarm[2] &lt; 80 &amp;&amp; wepdir &gt; -24 {wepdir -= 6}

if alarm[2] &gt; 80 {vibrate += 0.05; image_angle = point_direction(x, y, player.x, player.y)} else {vibrate -= 0.3}
if alarm[2] = 145 {image_index = 3}

if alarm[2] = 80 
{
/*var i;
for (i = -15; i &lt; 16; i += 15)
{
with instance_create(x, y, swallowerspear) {direction = other.image_angle + i; image_angle = direction} 
}
*/
with instance_create(x, y, swallowerspear) {direction = other.image_angle; image_angle = direction}
vibrate = 14
image_index = 4
}

if alarm[2] &lt; 30 &amp;&amp; instance_exists(swallowerspear) {alarm[2] = 31}
if alarm[2] = 5 {image_index = 0}
}



if phase = 3
{

if wepimage != 1
{
if alarm[3] &gt; 130 {wepdir += 8}
if alarm[3] = 139 {vibrate += 5; stab = 0}
}

if alarm[3] = 130 {image_index = 2; wepimage = 1; wepdir = 0}

if alarm[3] &lt; 130 &amp;&amp; alarm[3] &gt; 45 {if rotspd &lt; 15 {rotspd += (0.1 + rotspd) / 3} image_angle += rotspd * rotdir}
if alarm[3] &lt; 45 {if rotspd &gt; 0 {rotspd -= 0.6} image_angle += rotspd * rotdir}

if stab &lt; 100 &amp;&amp; alarm[3] &gt; 30 &amp;&amp; alarm[3] &lt; 130 {stab += 10}
if alarm[3] = 10 {vibrate = 6}
if alarm[3] &lt; 30 {stab -= 10}
if vibrate &gt; 1 {vibrate -= 0.4}

if alarm[3] &lt;= 15 
{
image_index = 0;
//image_angle += angle_difference(image_angle, point_direction(player.x, player.y, x, y)) / 3
}

if alarm[3] = 10 {wepdir = 80; wepimage = 0}
if alarm[3] &lt; 10 {wepdir -= 10}

if stab &lt; 0 {stab = 0}
if rotspd &lt; 0 {rotspd = 0}
}



if phase = 4
{
direction = image_angle;
if alarm[4] &gt; 90 {wepdir -= 4}
if alarm[4] = 90 {wepdir = 20; wepimage = 2}
if alarm[4] &gt; 70

{
if (place_meeting(x+lengthdir_x(-0.5, direction), y+lengthdir_y(-0.5, direction), worldwall)) {speed = -0.5} else {speed = 0}
wepdir -= 1; image_angle = point_direction(x, y, player.x, player.y)
} 

else
 
{
if speed &gt; 0
{
/*{
var i;
for (i = 1; place_meeting(x+lengthdir_x(speed + 1 - i, direction), y+lengthdir_y(speed + 1 - i, direction), wall); i += 1)
   {
   }
}*/
if place_meeting(x+lengthdir_x(speed, direction), y+lengthdir_y(speed, direction), wall)
{
    var i = 0;
    var xmov = lengthdir_x(1,direction)
    var ymov = lengthdir_y(1,direction) 
    while(i &lt; speed)
    {
        if !place_meeting(x + xmov, y, wall)
            x += xmov;
        else
            x -= xmov * speed;
        if !place_meeting(x - xmov, y + ymov, wall)
            y += ymov;
        else
            y -= ymov * speed;
        ++i;
        xprevious = x
        yprevious = y
        show_debug_message("Testing");
    }
}
--speed //-= i;
}
}
if speed &lt; 1 &amp;&amp; alarm[4] &gt; 40 &amp;&amp; alarm[4] &lt; 50 {alarm[4] = 20}
if alarm[4] = 60 {speed = 28; wepdir = 0}
if alarm[4] &lt; 60 &amp;&amp; alarm[4] &gt; 30 &amp;&amp; alarm[4] mod 3 = 0 &amp;&amp; wepimage &lt; 8 {wepimage += 1}
if alarm[4] = 5 {wepimage = 1}
}



if phase = 5
{
if alarm[5] = 29 {wepimage = 8}
if wepimage &lt; 14 &amp;&amp; alarm[5] mod 3 = 0 {wepimage += 1; vibrate -= 1}
if alarm[5] = 20 {image_index = 1; vibrate = 5}
if alarm[5] = 2 {image_index = 0}
}



if phase = 6
{
if alarm[6] &gt; 70 {vibrate += 0.3; image_index = 6}
image_angle = point_direction(x, y, player.x, player.y)

if alarm[6] mod 30 = 0 &amp;&amp; alarm[6] &lt; 70 
{
image_index = 1; 
vibrate += 5; 
var i;
for (i = -3; i &lt; 4; i += 1)
{
with instance_create(x + lengthdir_x(30, image_angle), y + lengthdir_y(30, image_angle), dagger) {direction = other.image_angle + i * 7}; 
}
kb += 10; 
kbdir = image_angle + 180
}

if alarm[6] mod 30 = 5 &amp;&amp; alarm[6] &lt; 70 {image_index = 6}
if vibrate &gt; 0 {vibrate -= 0.5}
if alarm[6] = 5 {image_index = 0}
}



if phase = 9
{
if alarm[9] = 99 {instance_destroy(swallowerspear); player.image_alpha = 0}
if alarm[9] &gt; 30 
{
player.xprevious = x + lengthdir_x(30, image_angle)
player.yprevious = y + lengthdir_y(30, image_angle)
if vibrate &gt; 0 {vibrate -= random_range(0, 4)} 
if vibrate &lt;= 0 {vibrate += random_range(0, 4)}
if alarm[9] mod 10 = 0 {image_index = 5; player.hp -= 2}
if alarm[9] mod 10 = 5 {image_index = 4}
with player script_execute(interrupt)
}

if alarm[9] = 30 
{
player.image_alpha = 1
vibrate = 0
player.xprevious = x + lengthdir_x(20, image_angle)
player.yprevious = y + lengthdir_y(20, image_angle)
player.kbdir = image_angle
player.kb = 26
}

if alarm[9] &gt; 30 &amp;&amp; alarm[9] &lt; 70 {wepdir += 1}
if alarm[9] &lt; 30 {if wepdir &gt; -25 {wepdir -= 5}; vibrate -= 0.3; if vibrate &lt; 0 {vibrate = 0}}

}
}

show_debug_message(image_index)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="sword">
      <action>
        <libid>1</libid>
        <id>601</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_execute_script</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>9</kind>
            <script>damagedscript</script>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="worldwall">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="player">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if alarm[4] &gt; 30 {player.kbdir = point_direction(x,y,player.x,player.y); player.kb = speed + 1}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if aggro = true 
{
draw_text_color(5, view_hport - 78, "Sword Swallower", c_white, c_white, c_white, c_white, 1)
draw_healthbar(5, view_hport - 40, 1024 - 124, view_hport - 10, prevhp / maxhp * 100, c_black, c_yellow, c_yellow, 0, true, true)
draw_healthbar(5, view_hport - 40, 1024 - 124, view_hport - 10, hp / maxhp * 100, c_black, c_red, c_red, 0, false, true)
draw_sprite(spr_bossbar, 0, 4, view_hport - 41)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self()
draw_sprite_ext(sprite_index, image_index, x+(random_range(-vibrate,vibrate)), y+(random_range(-vibrate,vibrate)), image_xscale, image_yscale, image_angle, image_blend, image_alpha);
draw_sprite_ext(sprite_index, image_index, x+(random_range(-vibrate,vibrate)), y+(random_range(-vibrate,vibrate)), image_xscale, image_yscale, image_angle, image_blend, image_alpha);
if alarm[1] &gt; 40 &amp;&amp; alarm[1] &lt; 52 {draw_sprite_ext(spr_swallowerscream, 0, x, y, screamsize, screamsize, image_angle, c_white, 0.5); screamsize += 0.16}
if alarm[1] = 55 {screamsize = 0}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
