<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>display = false
x = 0
y = 0
vcells = 5
hcells = 4
inv = ds_list_create()
for(var i = 0; i &lt; 4;++i)
equipment[i] = noone
slot_size = 64
padding = 5
width = padding + (hcells + 3) * padding + (hcells + 3) * slot_size
height = padding + vcells * padding + vcells * slot_size
//fill with random items
repeat(5)
ds_list_add(inv,irandom(5))
ds_list_sort(inv,1)

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if display = true{
draw_rectangle_colour(x-2,y-2,2+x + width,2 + y + height,c_dkgray,c_dkgray,c_dkgray,c_dkgray,false)
draw_rectangle_colour(x,y,x + width,y + height,c_gray,c_gray,c_gray,c_gray,false)
for(var yy = 0; yy &lt; vcells; yy++)
for(var xx = 0; xx &lt; hcells; xx++)
{
    draw_rectangle_colour(x+(xx + 3) * slot_size + (xx + 4) * padding,y+yy * slot_size + (yy + 1) * padding,x+(xx + 4) * slot_size + (xx + 4) * padding,y+(yy + 1) * slot_size + (yy + 1) * padding,c_dkgray,c_dkgray,c_dkgray,c_dkgray,true)
    if ds_list_size(inv) &gt; yy * hcells + xx
    {
        draw_sprite(spr_inventoryitems,inv[|yy * hcells + xx],x+(xx + 3) * slot_size + (xx + 4) * padding,y+yy * slot_size + (yy + 1) * padding)
        if mouse_check_button_pressed(mb_left) and point_in_rectangle(mouse_x,mouse_y,x+(xx + 3) * slot_size + (xx + 4) * padding,y+yy * slot_size + (yy + 1) * padding,x+(xx + 4) * slot_size + (xx + 4) * padding,y+(yy + 1) * slot_size + (yy + 1) * padding)
        {
            var type = inventoryscript(inv[|yy * hcells + xx],2)
            if type &lt; 4
            {
                //swap weapons
                var temp = inv[|yy * hcells + xx];
                inv[|yy * hcells + xx] = equipment[type]
                equipment[type] = temp 
                //functionally change the stuff
                
                
            }
        }
    }
}
//helm
draw_rectangle_colour(x + slot_size + padding*2,y + padding,x + 2 * slot_size + padding*2,y + padding + slot_size,c_dkgray,c_dkgray,c_dkgray,c_dkgray,true)
draw_sprite(spr_inventoryitems,equipment[0],x + slot_size + padding*2,y + padding)
//sword
draw_rectangle_colour(x + padding,y + slot_size + padding * 2,x + slot_size + padding,y + padding * 2 + slot_size * 2,c_dkgray,c_dkgray,c_dkgray,c_dkgray,true)
draw_sprite(spr_inventoryitems,equipment[1],x + padding,y + slot_size + padding * 2)
//shield
draw_rectangle_colour(x + slot_size * 2 + padding*3,y + slot_size + padding*2,x + slot_size * 3 + padding*3,y + padding*2 + slot_size * 2,c_dkgray,c_dkgray,c_dkgray,c_dkgray,true)
draw_sprite(spr_inventoryitems,equipment[2],x + slot_size * 2 + padding*3,y + slot_size + padding*2)
//armor
draw_rectangle_colour(x + slot_size + padding*2,y + slot_size*2 + padding*3,x + 2 * slot_size + padding*2,y + padding*3 + slot_size*3,c_dkgray,c_dkgray,c_dkgray,c_dkgray,true)
draw_sprite(spr_inventoryitems,equipment[3],x + slot_size + padding*2,y + slot_size*2 + padding*3)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if display = false {display = true}
else 
display = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
